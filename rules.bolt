path /user-question-banks/{userid}/{questionBankUniqueID} is UserQuestionBankType {

}

path /question-bank-memberships/{questionBankUniqueID}/{UserID} is UserQuestionBankType {

}

type UserQuestionBankType {

  "member-type": MembershipType

  }
type MembershipType extends Number {

  validate() { newData.val() == 1 || newData.val() == 2 }

}

path /question-bank/{questionBankUniqueID} is TimeQuestionBankType{}

type TimeQuestionBankType
{
timestamp : CurrentTimeStamp,

 title : String,
 desc : String,

}
type CurrentTimeStamp extends Number{
validate() {newData.val() <= Date.now}
}
path /question-bank-topics/{questionBankUniqueID}/{autotopicid1} is QuestionBankTopicType{
     /subtopics/{autoSubTopicID}  is QuestionBankSubtopicType {

     }
       validate() {this.hasChildren(["subtopics"])}
}

type QuestionBankTopicType
{
timestamp : CurrentTimeStamp
title : String
desc : String
question : QuestionID
}
  type QuestionBankSubtopicType{
         timestamp : CurrentTimeStamp
         title : String
         desc : String
         question : QuestionID
}
type QuestionID {
    questionID : Boolean
}


path /question-bank-quizes/{questionBankID} is QuestionBankQuizType{}

type QuestionBankQuizType{
 $quizID : Boolean

}

path /group-quizes/{groupID} is QuestionBankQuizType{}

path /quizes/{quizID} is QuestionBankQuiz1type{}

 type QuestionBankQuiz1type{
 title : String,
 desc : String,
 duration : Number,
 "num-questions" : Number,
}
path /quiz-topics/{quizID}/{autotopicID} is QuestionBankQuizAutoTopicType{
 /subtopics/{autoSubTopicID}  is QuestionBankSubtopicType {

      }
        validate() {this.hasChildren(["subtopics"])}
}


type QuestionBankQuizAutoTopicType{
timestamp : CurrentTimeStamp
title : String
desc : String

}
path /quiz-questions/{quizID}/{questionID} is QuestionBankQuiz3Type{}
type QuestionBankQuiz3Type {
title : String
type : TypeCode
desc : String
options : OptionID
}
 type TypeCode extends Number {
 validate()  {"newData.isNumber() && (newData.val() == 1 || newData.val() == 2 || newData.val() == 3)"}
 }
 type OptionID {
     OptionID : Boolean
 }

 path /quiz-answers/{quizID}/{questionID} is QuestionBankAnswerType{
 /options/{optionID}  is QuestionBankAnswerOptionType { }
    validate() {this.hasChildren(["options"])}
    }
 type QuestionBankAnswerType{
 title: String
 type : TypeCode
 "desc-html": String
 "discussion-html" : String
 }

 type QuestionBankAnswerOptionType{
 html : String
 correct : Boolean
 "discussion-html" : String

 }

 path /quiz-answer-sheet/{groupid}/{quizid}/{userid}/{questionId} is QuestionBankAnswerCheckType{}
 type QuestionBankAnswerCheckType{
 optionID : Boolean
 correct : Boolean
 }